function genradareqreport(rparms)
% This function is for internal use only. It may be removed in the future.

% genradareqreport Print a text report of parameters of Radar Equation App

%   Copyright 2012 The MathWorks, Inc.

% Get date/time and version numbers
date_time_str = datestr(now);
ml = ver('matlab');
pat = ver('phased');

% String dictionaries
radarconfig = {getString(message('phased:apps:radareqapp:Monostatic')), ...
    getString(message('phased:apps:radareqapp:Bistatic'))};

calcstr = {getString(message('phased:apps:radareqapp:Range')), ...
    getString(message('phased:apps:radareqapp:PeakPower')), ...
    getString(message('phased:apps:radareqapp:Snr'))};

% Store the report content as StringWriter
rstring = StringWriter;
rstring.addcr('% Radar Equation Calculator Report');
rstring.addcr('%');
rstring.addcr(['% Generated by ' ml.Name ' ' ml.Version ' and ' pat.Name ' ' pat.Version]);
rstring.addcr(['% Generated on ' date_time_str]);
rstring.addcr('%');
rstring.addcr(['% Calculation: ' calcstr{rparms.calc_type}]);
rstring.addcr(['% Radar configuration: ' radarconfig{rparms.config_type}]);
rstring.addcr('%');
rstring.addcr(['% Wavelength (m)..................................... ' num2str(rparms.wavelen)]);
rstring.addcr(['% Pulse Width (s).................................... ' num2str(rparms.pwidth)]);
rstring.addcr(['% System Losses (dB)................................. ' num2str(rparms.sysloss)]);
rstring.addcr(['% Noise Temperature (K).............................. ' num2str(rparms.noisetemp)]);
rstring.addcr(['% Target Radar Cross Section (m^2)................... ' num2str(rparms.radxsec)]);

if (rparms.config_type == 1)
    rstring.addcr(['% Gain (dB).......................................... ' num2str(rparms.txgain)]);
elseif (rparms.config_type == 2)
    rstring.addcr(['% Transmitter Gain (dB).............................. ' num2str(rparms.txgain)]);
    rstring.addcr(['% Receiver Gain (dB)................................. ' num2str(rparms.rxgain)]);
end

% Check for Monostatic or bistatic case
if ~(rparms.calc_type == 1)
    if (rparms.config_type == 1) % Monostatic
        rstring.addcr(['% Target Range (m)................................... ' num2str(rparms.rangetx)]);
    elseif (rparms.config_type == 2) % Bistatic
        rstring.addcr(['% Range from Transmitter (m)......................... ' num2str(rparms.rangetx)]);
        rstring.addcr(['% Range from Receiver (m)............................ ' num2str(rparms.rangerx)]);
    end
end

% Write power if not to be calculated
if ~(rparms.calc_type == 2)
    rstring.addcr(['% Peak Transmit Power (W)............................ ' num2str(rparms.Pt)]);
end

% Write snr if not to be calculated
if ~(rparms.calc_type == 3)
    rstring.addcr(['% SNR (dB)........................................... ' num2str(rparms.SNR)]);
end
result_str = {'% Target Range (m)................................... ', ...
    '% Peak Transmit Power (W)............................ ', ...
    '% SNR (dB)........................................... '};

% Add the radar equation string
rstring.addcr();
rstring.addcr([result_str{rparms.calc_type}  num2str(rparms.result,4)]);
% Open untitled file in editor and show the report text there
editorDoc = matlab.desktop.editor.newDocument;
editorDoc.Text = rstring.string;
% Scroll document to line 1
editorDoc.goToLine(1);

end % Gen report func