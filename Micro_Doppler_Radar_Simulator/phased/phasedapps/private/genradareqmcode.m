function genradareqmcode(rparms)
% This function is for internal use only. It may be removed in the future.

% GENRADAREQMCODE Generate MATLAB code for Radar Equation Calculator

% Copyright 2012 The MathWorks, Inc.

% Get date/time and version numbers
date_time_str = datestr(now);
ml = ver('matlab');
pat = ver('phased');

% mcodebuffer to holds the text for matlab code
mcode = sigcodegen.mcodebuffer;
mcode.addcr('% MATLAB Code');
mcode.addcr(['% Generated by ' ml.Name ' ' ml.Version ' and ' pat.Name ' ' pat.Version]);
mcode.addcr(['% Generated on ' date_time_str]);
mcode.addcr();
mcode.addcr(['% All quantities are in standard units' sprintf('\n')]);
mcode.addcr(['wavelen = ' num2str(rparms.wavelen) ';' sprintf('\t\t\t\t\t\t\t') '% Wavelength (m)']);
mcode.addcr(['pwidth = ' num2str(rparms.pwidth) ';' sprintf('\t\t\t\t\t\t\t') '% Pulse width (s)']);
mcode.addcr(['sysloss = ' num2str(rparms.sysloss) ';' sprintf('\t\t\t\t\t\t\t') '% System losses (dB)']);
mcode.addcr(['noisetemp = ' num2str(rparms.noisetemp) ';' sprintf('\t\t\t\t\t\t') '% Noise temperature (K)']);
mcode.addcr(['rcs = ' num2str(rparms.radxsec) ';' sprintf('\t\t\t\t\t\t\t\t') '% Target radar cross section (m^2)']);

% Logic for handling mono/bistatic cases for gain
if (rparms.config_type == 1)
    mcode.addcr(['gain = ' num2str(rparms.txgain) ';' sprintf('\t\t\t\t\t\t\t\t') '% Gain (dB)']);
elseif (rparms.config_type == 2)
    mcode.addcr(['gain = [' num2str(rparms.txgain) ' ' num2str(rparms.rxgain) '];' ...
        sprintf('\t\t\t\t\t\t\t') '% Transmitter and receiver gains']);
end

% Logic for handling mono/bistatic cases for target range
if ~(rparms.calc_type == 1)
    if (rparms.config_type == 1) % Monostatic
        mcode.addcr(['tgtrng = ' num2str(rparms.rangetx) ';' ...
            sprintf('\t\t\t\t\t\t\t') '% Target range (m)']);
    elseif (rparms.config_type == 2) % Bistatic
        mcode.addcr(['tgtrng = ' '[' num2str(rparms.rangetx) ' ' num2str(rparms.rangerx) '];' ...
            sprintf('\t\t\t\t\t') '% Target range from transmitter and receiver' ]);
    end
end

if ~(rparms.calc_type == 2)
    mcode.addcr(['pkpow = ' num2str(rparms.Pt) ';' ...
        sprintf('\t\t\t\t\t\t\t') '% Peak transmit power (W)']);
end

if ~(rparms.calc_type == 3)
    if rparms.detection == 0
        mcode.addcr(['snr = ' num2str(rparms.SNR) ';' sprintf('\t\t\t\t\t\t\t\t') '% SNR (dB)']);
    elseif rparms.detection == 1
        mcode.addcr(['snr = shnidman(' num2str(rparms.Pd) ',' ...
            num2str(rparms.Pfa) ',' num2str(rparms.numpulse) ',' ...
            num2str(rparms.swerlingcase) ');' sprintf('\t\t\t') '% SNR (dB)']);
    end
end

% Code for actual calculation
calc_str = {'tgtrng = radareqrng(wavelen, snr, pkpow, pwidth,''rcs'', rcs, ''gain'', gain, ''loss'', sysloss, ''Ts'', noisetemp);', ...
    'pkpower = radareqpow(wavelen, tgtrng, snr, pwidth,''rcs'', rcs, ''gain'', gain, ''loss'', sysloss, ''Ts'', noisetemp);', ...
    'snr = radareqsnr(wavelen, tgtrng, pkpow, pwidth,''rcs'', rcs, ''gain'', gain, ''loss'', sysloss, ''Ts'', noisetemp);'};
mcode.addcr(calc_str{rparms.calc_type});

% Launch the editor with the MATLAB code
editorDoc = matlab.desktop.editor.newDocument;
editorDoc.Text = mcode.string;
editorDoc.smartIndentContents();
% Scroll document to line 1
editorDoc.goToLine(1);
end
% [EOF]
